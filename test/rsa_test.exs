defmodule RsaTest do
    use ExUnit.Case

    @test_public_key "-----BEGIN PUBLIC KEY-----
MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe4eCZ0
FPqri0cb2JZfXJ/DgYSF6vUpwmJG8wVQZKjeGcjDOL5UlsuusFncCzWBQ7RKNUSesmQRMSGkVb1/
3j+skZ6UtW+5u09lHNsj6tQ51s1SPrCBkedbNf0Tp0GbMJDyR4e9T04ZZwIDAQAB
-----END PUBLIC KEY-----"

    @test_public_key_decoded {:RSAPublicKey, 119445732379544598056145200053932732877863846799652384989588303737527328743970559883211146487286317168142202446955508902936035124709397221178664495721428029984726868375359168203283442617134197706515425366188396513684446494070223079865755643116690165578452542158755074958452695530623055205290232290667934914919, 65537}

    @test_private_key "-----BEGIN RSA PRIVATE KEY-----
MIICXAIBAAKBgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe4eCZ0FPqri0cb2JZfXJ/DgYSF6vUp
wmJG8wVQZKjeGcjDOL5UlsuusFncCzWBQ7RKNUSesmQRMSGkVb1/3j+skZ6UtW+5u09lHNsj6tQ5
1s1SPrCBkedbNf0Tp0GbMJDyR4e9T04ZZwIDAQABAoGAFijko56+qGyN8M0RVyaRAXz++xTqHBLh
3tx4VgMtrQ+WEgCjhoTwo23KMBAuJGSYnRmoBZM3lMfTKevIkAidPExvYCdm5dYq3XToLkkLv5L2
pIIVOFMDG+KESnAFV7l2c+cnzRMW0+b6f8mR1CJzZuxVLL6Q02fvLi55/mbSYxECQQDeAw6fiIQX
GukBI4eMZZt4nscy2o12KyYner3VpoeE+Np2q+Z3pvAMd/aNzQ/W9WaI+NRfcxUJrmfPwIGm63il
AkEAxCL5HQb2bQr4ByorcMWm/hEP2MZzROV73yF41hPsRC9m66KrheO9HPTJuo3/9s5p+sqGxOlF
L0NDt4SkosjgGwJAFklyR1uZ/wPJjj611cdBcztlPdqoxssQGnh85BzCj/u3WqBpE2vjvyyvyI5k
X6zk7S0ljKtt2jny2+00VsBerQJBAJGC1Mg5Oydo5NwD6BiROrPxGo2bpTbu/fhrT8ebHkTz2epl
U9VQQSQzY1oZMVX8i1m5WUTLPz2yLJIBQVdXqhMCQBGoiuSoSjafUhV7i1cEGpb88h5NBYZzWXGZ
37sJ5QsW+sJyoNde3xH8vdXhzU7eT82D6X/scw9RZz+/6rCJ4p0=
-----END RSA PRIVATE KEY-----"

    @test_private_key_decoded {:RSAPrivateKey, :"two-prime", 119445732379544598056145200053932732877863846799652384989588303737527328743970559883211146487286317168142202446955508902936035124709397221178664495721428029984726868375359168203283442617134197706515425366188396513684446494070223079865755643116690165578452542158755074958452695530623055205290232290667934914919,
    65537, 15561097747174142518018336482604905218597151593381327540795351287227189722080971669177056757380572439714941551979891282989271219231408722926338365571654978607893958475513953370159409670998537225496707103101579959463821567722828752898977700114600659869336789019676485627997391114080902742115482118336774562577,
    11627708886355621199735412802139569467434585415329927587631124833895119494317513796736733307101074383089140602809318017663635247723052449998061148241098917,
    10272507984759283768184415823001782212803274857375688280678837373891542550268707041884550332766324551399377658257839771525050268735407698239431037942292507,
    1167259666498827103362364478466762706963274752391101112333875067247447871478934392308634335221599529522917680484039599588157167626988755489833899847081645,
    7621032557593132674563902554742659153893343101461210307076700977401783577774612891701919857934166440538766515436385973287142669273605103927542861220260371,
    924843845674297687057332936270821194408196365601586008771941767943794433626762616882201525008354242744253244251523660525258633929842398544395182793155229, :asn1_NOVALUE}

    test "RSA.decode_key (public)" do
        pubkey = RSA.decode_key @test_public_key
        assert pubkey == @test_public_key_decoded
    end

    test "RSA.decode_key (private)" do
        privkey = RSA.decode_key @test_private_key
        assert privkey == @test_private_key_decoded
    end

    test "RSA.encrypt/decrypt (public/private)" do
        plaintext = "hello world"
        cyphertext = plaintext |> RSA.encrypt({:public, @test_public_key_decoded})
        new_plaintext = cyphertext |> RSA.decrypt({:private, @test_private_key_decoded})
        assert new_plaintext == plaintext
    end

    test "RSA.encrypt/decrypt (private/public)" do
        plaintext = "hello world"
        cyphertext = plaintext |> RSA.encrypt({:private, @test_private_key_decoded})
        new_plaintext = cyphertext |> RSA.decrypt({:public, @test_public_key_decoded})
        assert new_plaintext == plaintext
    end
end
